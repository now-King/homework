/* 
简答题

一、
最终执行结果为：10
原因：数组a的元素绑定的函数中的变量i为全局变量i,而全局变量i最终为10


二、
最终执行结果为：报错
原因：if里面使用let再次声明了tmp变量，则此时if中使用tmp不再是全局变量，
而是if中再次声明的局部变量，使用tmp变量是在使用let声明之前则报错


三、
Math.min(...arr)


四、
var:变量会声明提前
let:变量不会声明提前，有局部作用域
const:声明的变量为常量，不可修改


五、
最终输出的结果：20
原因：使用箭头函数时，内外this相同，
则调用obj.fn()时，setTimeout定时器的箭头函数this和fn函数的this相同,此时this指向obj,this.a等于obj.a等于20


六、
用途：
1.用于创建独一无二的值，可做唯一key用于缓存等场景
2.用于创建类的私有变量,利用symbol属性不能被枚举的特性声明作为私有属性
3.用来重置对象的属性，比如 Symbol.toStringTag
4.可实现 Symbol.iterator迭代器， 让普通对象变为可迭代对象
5.使用Symbol.for('xxx')获取全局的symbol值


七、
1.对于字符串类型，浅复制是对值的复制；
2.对于对象来说，浅复制是对对象地址的复制，并没有开辟新的栈，也就是复制的结果是两个对象指向同一个地址，
修改其中一个对象的属性，则另一个对象的属性也会改变；
而深复制则是开辟新的栈，两个对象对应两个不同的地址，修改一个对象的属性，不会改变另一个对象的属性。


八、
1.TypeScript是JavaScript的超集
2.TypeScript有更丰富的类型系统


九、
优点：
1.杜绝手误导致的变量名写错。
2.自动完成。
3.重构支持。
4.类型可以一定程度上充当文档
缺点：
1.类型标注麻烦。
2.现阶段大部分静态类型语言的类型系统还不够强。
3.eval 和 new Function() 这种骚操作类型系统管不到。
4.需要编译，类型检查会增加编译时长，语法和类型系统复杂的话时间特别特别长，比如 scala。


十、
工作原理：设置引用数，判断当前引用数是否为0来决定是不是垃圾对象，如果是0就GC就进行工作，进行回收。
优点：
1. 发现垃圾时立即回收
2. 最大限度减少程序暂停，让空间不会有被占满的时候
缺点：
1. 无法回收循环引用的对象
2. 资源消耗开销大（对所有对象进行数值的监控和修改，本身就会占用时间和资源）


十一、
工作流程：
标记-整理（Mark-Compact）算法不直接对可回收对象进行清理，而是让所有可用的对象都向一端移动。然后直接清理掉边界意外的内存。


十二、
新生代中的对象主要通过Scavenge算法进行垃圾回收,在Scavenge的具体 实现中,主要采用了Cheney算法
Cheney 算法是一种采用复制的方式实现的垃圾回收算法。它将堆内存一分为二,每一部分空间称为 semispace。
在这两个 semispace 空间中,只有一个处于使用中,另一个处于闲置状态。
处于使用状态的 semispace 空间称为 From 空间,处于闲置状态的空间称为 To 空间。
当我们分配对象时,先是在 From 空间中进行分配。
当开始进行垃圾回收时,会检查 From 空间中的存活对象,这 些存活对象将被复制到 To 空间中,而非存活对象占用的空间将会被释放。
完成复制后,From 空 间和To空间的角色发生对换。 
简而言之, 在垃圾回收的过程中, 就是通过将存活对象在两个 semispace 空间之间进行复制。
*/

